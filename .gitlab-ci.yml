stages:
  - install
  - build
  - test
  - deploy

variables:
  NODE_ENV: test

before_script:
  - rm -f .git/index.lock .git/config.lock .git/shallow.lock
  - node -v
  - npm -v
  - mkdir -p ~/.ssh
  - echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
  - chmod 600 ~/.ssh/id_rsa
  - echo "OPENAI_API_KEY=$OPENAI_API_KEY" > frontend/.env
  - echo "OPENAI_API_KEY=$OPENAI_API_KEY" > backend/.env

# install_frontend:
#   image: node:20
#   stage: install
#   script:
#     - cd frontend
#     - npm install
#   cache:
#     key: npm-frontend
#     paths:
#       - frontend/node_modules/
#   tags:
#     - docker  
#   variables:
#     GIT_DEPTH: 0

# install_backend:
#   image: node:20
#   stage: install
#   script:
#     - cd backend/src
#     - npm install
#   tags:
#     - docker

# build_frontend:
#   image: node:20
#   stage: build
#   dependencies:
#     - install_frontend
#   cache:
#     key: npm-frontend
#     paths:
#       - frontend/node_modules/
#   script:
#     - cd frontend
#     - npm run build
#   tags:
#     - docker
#   artifacts:
#     paths:
#       - frontend/build/
#     expire_in: 1h

# test_frontend:
#   image: node:20
#   stage: test
#   dependencies:
#     - install_frontend
#   script:
#     - cd frontend
#     - npm run test:ci
#   cache:
#     key: npm-frontend
#     paths:
#       - frontend/node_modules/
#   tags:
#     - docker

# deploy_frontend:
#   image: node:18
#   stage: deploy
#   script:
#     - cd frontend
#     - mv build public
#   only:
#     - frontend
#   tags:
#     - docker

test_backend_lambda:
  stage: test
  tags:
    - docker
  image:
    name: amazon/aws-cli:latest
    entrypoint: [""]
  before_script:
    - echo "Checking AWS CLI version..."
    - cd backend/src
    - aws --version
  script:
    - echo "Invoking AWS Lambda function 'generateRoleplay'..."
    - aws lambda invoke --function-name generateRoleplay --payload fileb://src/tests/payloads/roleplay/generateRoleplay.json generateRoleplay_output.json --log-type Tail
    - cat generateRoleplay_output.json

    - echo "Invoking AWS Lambda function 'getRoleplayHistory'..."
    - aws lambda invoke --function-name getRoleplayHistory --payload fileb://src/tests/payloads/roleplay/getRoleplayHistory.json getRoleplayHistory_output.json --log-type Tail
    - cat getRoleplayHistory_output.json

    - echo "Invoking AWS Lambda function 'saveRoleplayHistory'..."
    - aws lambda invoke --function-name saveRoleplayHistory --payload fileb://src/tests/payloads/roleplay/saveRoleplayHistory.json saveRoleplayHistory_output.json --log-type Tail
    - cat saveRoleplayHistory_output.json
  only:
    - backend
